package problem11to20;

import java.util.HashMap;

public class Problem12 {
	
	/*	The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

		1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

		Let us list the factors of the first seven triangle numbers:
	
 		 1: 1
 		 3: 1,3
 		 6: 1,2,3,6
		10: 1,2,5,10
		15: 1,3,5,15
		21: 1,3,7,21
		28: 1,2,4,7,14,28
		We can see that 28 is the first triangle number to have over five divisors.

		What is the value of the first triangle number to have over five hundred divisors?
	 */
	
	public long run(){
		long triSeq = 1;
		long num = 1;
		boolean running = true;
		while(running){
			for(int i = 1; i<=num; i++){
				triSeq = triSeq + i;
			}
			if(getAmountOfDivisors(triSeq, num)>500){
				return triSeq;
			}
			num++;
		}
		return 0;
	}
	
	public int getAmountOfDivisors(long triSeq, long num){
		int result = 1;
		for(long i = 1; i<=triSeq/2; i++){
			if(triSeq % i == 0){
				result++;
			}
		}
		System.out.println("RESULT: "+result+" NUM: "+num+" TRISEQ: "+triSeq);
		return result;
	}
}
